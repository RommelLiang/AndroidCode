package com.example.dicdemo;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.os.Environment;
import android.util.Log;


//使用这种方法将raw文件下的数据库文件复制到/data/data/com.example.dicdemo（你的项目的包名）/dictionarydanci.db（数据库文件名称）文件夹（也可以是你想要的任何文件夹）下
//之后就可以使用常用的数据库dao类对数据库进行相关的增删改差操作
/*
在dao类中，使用SQLiteDatabase database = SQLiteDatabase.openOrCreateDatabase(
				DBManager.DB_PATH + "/" + DBManager.DB_NAME, null);
	这条语句读取已经存在的数据库，之后使用database对数据库进行增删改差的操作
	！！！：在使用之前注意判断数据库文件是否存在，同时判断数据库文件是否打开
		dao类中数据库文件使用之后要注意及时的释放资源，关闭数据库文件和游标结果集合
*/
public class DBManager {
	private final int BUFFER_SIZE = 40000;
	public static final String DB_NAME = "dictionarydanci.db"; // 保存的数据库文件名（raw文件夹下数据库文件的名称）
	public static final String PACKAGE_NAME = "com.example.dicdemo"; // sd卡数据库在此位置下（修改为你项目所在的包名）
	public static final String DB_PATH = "/data"
			+ Environment.getDataDirectory().getAbsolutePath() + "/"
			+ PACKAGE_NAME;
	// 在手机里存放数据库的位置(/data/data/com.example.dicdemo（你的项目的包名）/dictionarydanci.db（数据库文件名称）)
	private SQLiteDatabase database;
	private Context context;

	public DBManager(Context context) {
		this.context = context;
	}

	public SQLiteDatabase getDatabase() {
		return database;
	}

	public void setDatabase(SQLiteDatabase database) {
		this.database = database;
	}

	public void openDatabase() {
		System.out.println(DB_PATH);
		System.out.println(DB_NAME);
		System.out.println(DB_PATH + "/" + DB_NAME+"!!!!!!!!!!");
		this.database = this.openDatabase(DB_PATH + "/" + DB_NAME);
	}

	private SQLiteDatabase openDatabase(String dbfile) {
		try {
			if (!(new File(dbfile).exists())) {
				// 判断数据库文件是否存在，若不存在则执行导入，否则直接打开数据库
				InputStream is = this.context.getResources().openRawResource(
						R.raw.dictionarydanci); // 欲导入的数据库
				FileOutputStream fos = new FileOutputStream(dbfile);
				byte[] buffer = new byte[BUFFER_SIZE];
				int count = 0;
				while ((count = is.read(buffer)) > 0) {
					fos.write(buffer, 0, count);
				}
				fos.close();
				is.close();
			}
			SQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(dbfile,
					null);
			return db;
		} catch (FileNotFoundException e) {
			Log.e("Database", "没有找到数据库。");
			e.printStackTrace();
		} catch (IOException e) {
			Log.e("Database", "IO异常。");
			e.printStackTrace();
		}
		return null;
	}

	public void closeDatabase() {
		this.database.close();
	}
	// /////////////////////////////////////
}
